let v: v128 = v128.floor<f32>(f32x4(1.1, -0.25, 70.01, 4.0));
export function extract_1(): f32 {
    return v128.extract_lane<f32>(v, 0);
}
export function extract_2(): f32 {
  return v128.extract_lane<f32>(v, 1);
}
export function extract_3(): f32 {
  return v128.extract_lane<f32>(v, 2);
}
export function extract_4(): f32 {
  return v128.extract_lane<f32>(v, 3);
}

export function getVal():bool {
  {
    let v: v128 = v128.ceil<f32>(f32x4(1.1, -0.25, 70.01, 4.0));
    assert(v128.extract_lane<f32>(v, 0) == 2.0);
    assert(v128.extract_lane<f32>(v, 1) == 0.0);
    assert(v128.extract_lane<f32>(v, 2) == 71.0);
    assert(v128.extract_lane<f32>(v, 3) == 4.0);
  }
  {
    let v: v128 =v128.floor<f32>(f32x4(1.1, -0.25, 70.01, 4.0))
    assert(v128.extract_lane<f32>(v, 0) == 1.0);
    assert(v128.extract_lane<f32>(v, 1) == -1);
    assert(v128.extract_lane<f32>(v, 2) == 70.0);
    assert(v128.extract_lane<f32>(v, 3) == 4.0);
  }
  {
    assert(
      v128.bitmask<i32>(f32x4(1, -1, 1, -1)) == 10
    );
  }
  return true;
}
